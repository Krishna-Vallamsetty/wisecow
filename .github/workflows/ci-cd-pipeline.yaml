# A friendly name for our workflow, which will show up in the Actions tab on GitHub
name: Wisecow CI/CD Pipeline

# This section defines the trigger for the workflow.
# 'on: push:' means it will run whenever someone pushes code.
# 'branches: [ "main" ]' specifies that it should ONLY run for pushes to the 'main' branch.
on:
  push:
    branches: [ "main" ]

# This section defines the jobs to be run.
jobs:
  # We have one job in this workflow, which we've named 'build-and-push-image'.
  build-and-push-image:
    # This job will run on a fresh virtual machine hosted by GitHub (Ubuntu).
    runs-on: ubuntu-latest

    # These are the individual steps the job will execute in order.
    steps:
      # Step 1: Checks out your repository's code onto the runner, so the job can access it.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Logs in to Docker Hub using the secrets we will set up next.
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          # These values are securely fetched from your repository's secrets.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Builds the Docker image using your Dockerfile and pushes it to your Docker Hub account.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as the build context
          push: true # This tells the action to push the image after a successful build
          # This creates the final image tag, e.g., 'krishna2317/wisecow:latest'.
          # It uses your DOCKERHUB_USERNAME secret to construct the tag correctly.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wisecow:latest
